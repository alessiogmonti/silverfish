/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, Edges, RoundedBox } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'
import { MeshStandardMaterial } from 'three'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/archdraco.gltf')
  useFrame(() => (
    group.current.rotation.x += 0.001
  ))
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Node.geometry}>
        <meshNormalMaterial color={new THREE.Color('rgba(82,99,125,1)')} roughness={0.2} metalness={0.9} />     
        <Edges
          scale={1.01}
          threshold={44} // Display edges only when the angle between two faces exceeds this value (default=15 degrees)
          color="lightblue"
        /> 
      </mesh>
      {/* <RoundedBox args={[1, 1, 1]} radius={0.05} smoothness={4} scale={[-258.68, -60.09, -63.54]}>
        <meshPhongMaterial color="#f3f3f3" wireframe />
      </RoundedBox>    */}
    </group>
  )
}

useGLTF.preload('/archdraco.gltf')
